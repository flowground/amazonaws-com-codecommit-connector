{
    "title": "AWS CodeCommit",
    "description": "AWS CodeCommit This is the AWS CodeCommit API Reference. This reference provides descriptions\nof the operations and data types for AWS CodeCommit API along with usage\nexamples.\n\nYou can use the AWS CodeCommit API to work with the following objects:\n\nRepositories, by calling the following:\n\n *   BatchGetRepositories, which returns information about one or more\n   repositories associated with your AWS account.\n   \n   \n *   CreateRepository, which creates an AWS CodeCommit repository.\n   \n   \n *   DeleteRepository, which deletes an AWS CodeCommit repository.\n   \n   \n *   GetRepository, which returns information about a specified repository.\n   \n   \n *   ListRepositories, which lists all AWS CodeCommit repositories associated\n   with your AWS account.\n   \n   \n *   UpdateRepositoryDescription, which sets or updates the description of the\n   repository.\n   \n   \n *   UpdateRepositoryName, which changes the name of the repository. If you\n   change the name of a repository, no other users of that repository will be\n   able to access it until you send them the new HTTPS or SSH URL to use.\n   \n   \n\nBranches, by calling the following:\n\n *   CreateBranch, which creates a new branch in a specified repository.\n   \n   \n *   DeleteBranch, which deletes the specified branch in a repository unless it\n   is the default branch.\n   \n   \n *   GetBranch, which returns information about a specified branch.\n   \n   \n *   ListBranches, which lists all branches for a specified repository.\n   \n   \n *   UpdateDefaultBranch, which changes the default branch for a repository.\n   \n   \n\nFiles, by calling the following:\n\n *   DeleteFile, which deletes the content of a specified file from a specified\n   branch.\n   \n   \n *   GetFile, which returns the base-64 encoded content of a specified file.\n   \n   \n *   GetFolder, which returns the contents of a specified folder or directory.\n   \n   \n *   PutFile, which adds or modifies a file in a specified repository and branch.\n   \n   \n\nInformation about committed code in a repository, by calling the following:\n\n *   CreateCommit, which creates a commit for changes to a repository.\n   \n   \n *   GetBlob, which returns the base-64 encoded content of an individual Git blob\n   object within a repository.\n   \n   \n *   GetCommit, which returns information about a commit, including commit\n   messages and author and committer information.\n   \n   \n *   GetDifferences, which returns information about the differences in a valid\n   commit specifier (such as a branch, tag, HEAD, commit ID or other fully\n   qualified reference).\n   \n   \n\nPull requests, by calling the following:\n\n *   CreatePullRequest, which creates a pull request in a specified repository.\n   \n   \n *   DescribePullRequestEvents, which returns information about one or more pull\n   request events.\n   \n   \n *   GetCommentsForPullRequest, which returns information about comments on a\n   specified pull request.\n   \n   \n *   GetMergeConflicts, which returns information about merge conflicts between\n   the source and destination branch in a pull request.\n   \n   \n *   GetPullRequest, which returns information about a specified pull request.\n   \n   \n *   ListPullRequests, which lists all pull requests for a repository.\n   \n   \n *   MergePullRequestByFastForward, which merges the source destination branch of\n   a pull request into the specified destination branch for that pull request\n   using the fast-forward merge option.\n   \n   \n *   PostCommentForPullRequest, which posts a comment to a pull request at the\n   specified line, file, or request.\n   \n   \n *   UpdatePullRequestDescription, which updates the description of a pull\n   request.\n   \n   \n *   UpdatePullRequestStatus, which updates the status of a pull request.\n   \n   \n *   UpdatePullRequestTitle, which updates the title of a pull request.\n   \n   \n\nInformation about comments in a repository, by calling the following:\n\n *   DeleteCommentContent, which deletes the content of a comment on a commit in\n   a repository.\n   \n   \n *   GetComment, which returns information about a comment on a commit.\n   \n   \n *   GetCommentsForComparedCommit, which returns information about comments on\n   the comparison between two commit specifiers in a repository.\n   \n   \n *   PostCommentForComparedCommit, which creates a comment on the comparison\n   between two commit specifiers in a repository.\n   \n   \n *   PostCommentReply, which creates a reply to a comment.\n   \n   \n *   UpdateComment, which updates the content of a comment on a commit in a\n   repository.\n   \n   \n\nTriggers, by calling the following:\n\n *   GetRepositoryTriggers, which returns information about triggers configured\n   for a repository.\n   \n   \n *   PutRepositoryTriggers, which replaces all triggers for a repository and can\n   be used to create or delete triggers.\n   \n   \n *   TestRepositoryTriggers, which tests the functionality of a repository\n   trigger by sending data to the trigger target.\n   \n   \n\nFor information about how to use AWS CodeCommit, see the AWS CodeCommit User\nGuide [http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html].",
    "docsUrl": "https://aws.amazon.com/codecommit/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/codecommit/2015-04-13/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://codecommit.amazonaws.com/",
                    "http://codecommit.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "BatchGetRepositories": {
            "main": "./lib/actions/BatchGetRepositories.js",
            "title": "BatchGetRepositories",
            "description": "Returns information about one or more repositories.\n\nThe description field for a repository accepts all HTML characters and all valid\nUnicode characters. Applications that do not HTML-encode the description and\ndisplay it in a web page could expose users to potentially malicious code. Make\nsure that you HTML-encode the description field in any application that uses\nthis API to display the repository description on a web page.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchGetRepositories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateBranch": {
            "main": "./lib/actions/CreateBranch.js",
            "title": "CreateBranch",
            "description": "Creates a new branch in a repository and points the branch to a commit.\n\nCalling the create branch operation does not set a repository's default branch.\nTo do this, call the update default branch operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateBranch.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateCommit": {
            "main": "./lib/actions/CreateCommit.js",
            "title": "CreateCommit",
            "description": "Creates a commit for a repository on the tip of a specified branch.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateCommit.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreatePullRequest": {
            "main": "./lib/actions/CreatePullRequest.js",
            "title": "CreatePullRequest",
            "description": "Creates a pull request in the specified repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreatePullRequest.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateRepository": {
            "main": "./lib/actions/CreateRepository.js",
            "title": "CreateRepository",
            "description": "Creates a new, empty repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateRepository.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteBranch": {
            "main": "./lib/actions/DeleteBranch.js",
            "title": "DeleteBranch",
            "description": "Deletes a branch from a repository, unless that branch is the default branch for the repository. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteBranch.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCommentContent": {
            "main": "./lib/actions/DeleteCommentContent.js",
            "title": "DeleteCommentContent",
            "description": "Deletes the content of a comment made on a change, file, or commit in a repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCommentContent.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteFile": {
            "main": "./lib/actions/DeleteFile.js",
            "title": "DeleteFile",
            "description": "Deletes a specified file from a specified branch. A commit is created on the branch that contains the revision. The file will still exist in the commits prior to the commit that contains the deletion.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteFile.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRepository": {
            "main": "./lib/actions/DeleteRepository.js",
            "title": "DeleteRepository",
            "description": "Deletes a repository. If a specified repository was already deleted, a null\nrepository ID will be returned.\n\nDeleting a repository also deletes all associated objects and metadata. After a\nrepository is deleted, all future push calls to the deleted repository will\nfail.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRepository.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePullRequestEvents": {
            "main": "./lib/actions/DescribePullRequestEvents.js",
            "title": "DescribePullRequestEvents",
            "description": "Returns information about one or more pull request events.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePullRequestEvents.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetBlob": {
            "main": "./lib/actions/GetBlob.js",
            "title": "GetBlob",
            "description": "Returns the base-64 encoded content of an individual blob within a repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBlob.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetBranch": {
            "main": "./lib/actions/GetBranch.js",
            "title": "GetBranch",
            "description": "Returns information about a repository branch, including its name and the last commit ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBranch.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetComment": {
            "main": "./lib/actions/GetComment.js",
            "title": "GetComment",
            "description": "Returns the content of a comment made on a change, file, or commit in a repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetComment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCommentsForComparedCommit": {
            "main": "./lib/actions/GetCommentsForComparedCommit.js",
            "title": "GetCommentsForComparedCommit",
            "description": "Returns information about comments made on the comparison between two commits.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCommentsForComparedCommit.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCommentsForPullRequest": {
            "main": "./lib/actions/GetCommentsForPullRequest.js",
            "title": "GetCommentsForPullRequest",
            "description": "Returns comments made on a pull request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCommentsForPullRequest.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCommit": {
            "main": "./lib/actions/GetCommit.js",
            "title": "GetCommit",
            "description": "Returns information about a commit, including commit message and committer information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCommit.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDifferences": {
            "main": "./lib/actions/GetDifferences.js",
            "title": "GetDifferences",
            "description": "Returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID or other fully qualified reference). Results can be limited to a specified path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDifferences.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetFile": {
            "main": "./lib/actions/GetFile.js",
            "title": "GetFile",
            "description": "Returns the base-64 encoded contents of a specified file and its metadata.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFile.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetFolder": {
            "main": "./lib/actions/GetFolder.js",
            "title": "GetFolder",
            "description": "Returns the contents of a specified folder in a repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFolder.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetMergeConflicts": {
            "main": "./lib/actions/GetMergeConflicts.js",
            "title": "GetMergeConflicts",
            "description": "Returns information about merge conflicts between the before and after commit IDs for a pull request in a repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetMergeConflicts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPullRequest": {
            "main": "./lib/actions/GetPullRequest.js",
            "title": "GetPullRequest",
            "description": "Gets information about a pull request in a specified repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPullRequest.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRepository": {
            "main": "./lib/actions/GetRepository.js",
            "title": "GetRepository",
            "description": "Returns information about a repository.\n\nThe description field for a repository accepts all HTML characters and all valid\nUnicode characters. Applications that do not HTML-encode the description and\ndisplay it in a web page could expose users to potentially malicious code. Make\nsure that you HTML-encode the description field in any application that uses\nthis API to display the repository description on a web page.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRepository.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRepositoryTriggers": {
            "main": "./lib/actions/GetRepositoryTriggers.js",
            "title": "GetRepositoryTriggers",
            "description": "Gets information about triggers configured for a repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRepositoryTriggers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListBranches": {
            "main": "./lib/actions/ListBranches.js",
            "title": "ListBranches",
            "description": "Gets information about one or more branches in a repository.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListBranches.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListPullRequests": {
            "main": "./lib/actions/ListPullRequests.js",
            "title": "ListPullRequests",
            "description": "Returns a list of pull requests for a specified repository. The return list can be refined by pull request status or pull request author ARN.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListPullRequests.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListRepositories": {
            "main": "./lib/actions/ListRepositories.js",
            "title": "ListRepositories",
            "description": "Gets information about one or more repositories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListRepositories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "MergePullRequestByFastForward": {
            "main": "./lib/actions/MergePullRequestByFastForward.js",
            "title": "MergePullRequestByFastForward",
            "description": "Closes a pull request and attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the fast-forward merge option.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/MergePullRequestByFastForward.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCommentForComparedCommit": {
            "main": "./lib/actions/PostCommentForComparedCommit.js",
            "title": "PostCommentForComparedCommit",
            "description": "Posts a comment on the comparison between two commits.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCommentForComparedCommit.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCommentForPullRequest": {
            "main": "./lib/actions/PostCommentForPullRequest.js",
            "title": "PostCommentForPullRequest",
            "description": "Posts a comment on a pull request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCommentForPullRequest.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCommentReply": {
            "main": "./lib/actions/PostCommentReply.js",
            "title": "PostCommentReply",
            "description": "Posts a comment in reply to an existing comment on a comparison between commits or a pull request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCommentReply.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutFile": {
            "main": "./lib/actions/PutFile.js",
            "title": "PutFile",
            "description": "Adds or updates a file in a branch in an AWS CodeCommit repository, and generates a commit for the addition in the specified branch.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutFile.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutRepositoryTriggers": {
            "main": "./lib/actions/PutRepositoryTriggers.js",
            "title": "PutRepositoryTriggers",
            "description": "Replaces all triggers for a repository. This can be used to create or delete triggers.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutRepositoryTriggers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TestRepositoryTriggers": {
            "main": "./lib/actions/TestRepositoryTriggers.js",
            "title": "TestRepositoryTriggers",
            "description": "Tests the functionality of repository triggers by sending information to the trigger target. If real data is available in the repository, the test will send data from the last commit. If no data is available, sample data will be generated.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TestRepositoryTriggers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateComment": {
            "main": "./lib/actions/UpdateComment.js",
            "title": "UpdateComment",
            "description": "Replaces the contents of a comment.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateComment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateDefaultBranch": {
            "main": "./lib/actions/UpdateDefaultBranch.js",
            "title": "UpdateDefaultBranch",
            "description": "Sets or changes the default branch name for the specified repository.\n\nIf you use this operation to change the default branch name to the current\ndefault branch name, a success message is returned even though the default\nbranch did not change.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateDefaultBranch.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdatePullRequestDescription": {
            "main": "./lib/actions/UpdatePullRequestDescription.js",
            "title": "UpdatePullRequestDescription",
            "description": "Replaces the contents of the description of a pull request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdatePullRequestDescription.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdatePullRequestStatus": {
            "main": "./lib/actions/UpdatePullRequestStatus.js",
            "title": "UpdatePullRequestStatus",
            "description": "Updates the status of a pull request. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdatePullRequestStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdatePullRequestTitle": {
            "main": "./lib/actions/UpdatePullRequestTitle.js",
            "title": "UpdatePullRequestTitle",
            "description": "Replaces the title of a pull request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdatePullRequestTitle.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateRepositoryDescription": {
            "main": "./lib/actions/UpdateRepositoryDescription.js",
            "title": "UpdateRepositoryDescription",
            "description": "Sets or changes the comment or description for a repository.\n\nThe description field for a repository accepts all HTML characters and all valid\nUnicode characters. Applications that do not HTML-encode the description and\ndisplay it in a web page could expose users to potentially malicious code. Make\nsure that you HTML-encode the description field in any application that uses\nthis API to display the repository description on a web page.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateRepositoryDescription.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateRepositoryName": {
            "main": "./lib/actions/UpdateRepositoryName.js",
            "title": "UpdateRepositoryName",
            "description": "Renames a repository. The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. The suffix \".git\" is prohibited. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateRepositoryName.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}